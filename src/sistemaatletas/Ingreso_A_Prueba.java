package sistemaatletas;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author nahuel
 */
public class Ingreso_A_Prueba extends javax.swing.JFrame {

    
    /**
     * Creates new form Ingreso_A_Prueba
     */
    public Ingreso_A_Prueba() {
        initComponents();
        
        // Llena los ComboBox
        if (Atletas_GUI.equipo.getPertenece().size() >= 1){
            for(int i=0; i<Atletas_GUI.equipo.getPertenece().size(); i++){  
                listaAtletas.addItem(Atletas_GUI.equipo.getPertenece().get(i).getNombre());
            }
        }else {
            JOptionPane.showMessageDialog(null, "No hay atletas registrados");
        }
        
        if (Atletas_GUI.listaPruebas.size() >= 1){
            for(int i=0; i<Atletas_GUI.listaPruebas.size(); i++){  
                listaPruebas.addItem(Atletas_GUI.listaPruebas.get(i).getTitulo());
                listaPruebasEliminar.addItem(Atletas_GUI.listaPruebas.get(i).getTitulo());
            }
        }else {
            JOptionPane.showMessageDialog(null, "No hay pruebas registradas");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelPrueba = new javax.swing.JLabel();
        labelPrueba1 = new javax.swing.JLabel();
        listaAtletas = new javax.swing.JComboBox<>();
        labelPrueba3 = new javax.swing.JLabel();
        listaPruebas = new javax.swing.JComboBox<>();
        codigoPrueba = new javax.swing.JTextField();
        tituloPrueba = new javax.swing.JTextField();
        sedePrueba = new javax.swing.JTextField();
        instalacionPrueba = new javax.swing.JTextField();
        botonAgregarPrueba = new javax.swing.JButton();
        botonTerminar = new javax.swing.JButton();
        botonAgregarAtletaAPrueba = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        atletasEnPruebaTextArea = new javax.swing.JTextArea();
        labelPrueba2 = new javax.swing.JLabel();
        listaPruebasEliminar = new javax.swing.JComboBox<>();
        botonEliminarPrueba = new javax.swing.JButton();
        labelAtletasEnPrueba = new javax.swing.JLabel();
        actualizarAtletasEnPrueba = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingreso a prueba");
        setMaximumSize(new java.awt.Dimension(750, 500));
        setMinimumSize(new java.awt.Dimension(750, 500));

        labelPrueba.setFont(new java.awt.Font("Manjari", 0, 18)); // NOI18N
        labelPrueba.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPrueba.setText("Agregar una nueva prueba");
        labelPrueba.setPreferredSize(new java.awt.Dimension(230, 23));

        labelPrueba1.setFont(new java.awt.Font("Manjari", 0, 18)); // NOI18N
        labelPrueba1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPrueba1.setText("Seleccione un atleta");
        labelPrueba1.setMaximumSize(new java.awt.Dimension(230, 23));
        labelPrueba1.setMinimumSize(new java.awt.Dimension(230, 23));
        labelPrueba1.setPreferredSize(new java.awt.Dimension(230, 23));

        listaAtletas.setMaximumSize(new java.awt.Dimension(180, 23));
        listaAtletas.setMinimumSize(new java.awt.Dimension(180, 23));
        listaAtletas.setPreferredSize(new java.awt.Dimension(180, 23));

        labelPrueba3.setFont(new java.awt.Font("Manjari", 0, 18)); // NOI18N
        labelPrueba3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPrueba3.setText("Seleccione una prueba");
        labelPrueba3.setPreferredSize(new java.awt.Dimension(230, 23));

        listaPruebas.setMaximumSize(new java.awt.Dimension(180, 23));
        listaPruebas.setMinimumSize(new java.awt.Dimension(180, 23));
        listaPruebas.setPreferredSize(new java.awt.Dimension(180, 23));

        codigoPrueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codigoPrueba.setText("Código");
        codigoPrueba.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        codigoPrueba.setMaximumSize(new java.awt.Dimension(180, 23));
        codigoPrueba.setMinimumSize(new java.awt.Dimension(180, 23));
        codigoPrueba.setPreferredSize(new java.awt.Dimension(180, 23));
        codigoPrueba.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                codigoPruebaFocusGained(evt);
            }
        });

        tituloPrueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tituloPrueba.setText("Título");
        tituloPrueba.setMaximumSize(new java.awt.Dimension(180, 23));
        tituloPrueba.setMinimumSize(new java.awt.Dimension(180, 23));
        tituloPrueba.setPreferredSize(new java.awt.Dimension(180, 23));
        tituloPrueba.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tituloPruebaFocusGained(evt);
            }
        });

        sedePrueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sedePrueba.setText("Sede");
        sedePrueba.setMaximumSize(new java.awt.Dimension(180, 23));
        sedePrueba.setMinimumSize(new java.awt.Dimension(180, 23));
        sedePrueba.setPreferredSize(new java.awt.Dimension(180, 23));
        sedePrueba.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sedePruebaFocusGained(evt);
            }
        });

        instalacionPrueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        instalacionPrueba.setText("Instalación");
        instalacionPrueba.setMaximumSize(new java.awt.Dimension(180, 23));
        instalacionPrueba.setMinimumSize(new java.awt.Dimension(180, 23));
        instalacionPrueba.setPreferredSize(new java.awt.Dimension(180, 23));
        instalacionPrueba.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                instalacionPruebaFocusGained(evt);
            }
        });

        botonAgregarPrueba.setText("Agregar prueba");
        botonAgregarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarPruebaActionPerformed(evt);
            }
        });

        botonTerminar.setText("Terminar");
        botonTerminar.setMaximumSize(new java.awt.Dimension(154, 30));
        botonTerminar.setMinimumSize(new java.awt.Dimension(154, 30));
        botonTerminar.setPreferredSize(new java.awt.Dimension(154, 30));
        botonTerminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTerminarActionPerformed(evt);
            }
        });

        botonAgregarAtletaAPrueba.setText("Agregar atleta a prueba");
        botonAgregarAtletaAPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarAtletaAPruebaActionPerformed(evt);
            }
        });

        atletasEnPruebaTextArea.setEditable(false);
        atletasEnPruebaTextArea.setColumns(20);
        atletasEnPruebaTextArea.setRows(5);
        jScrollPane1.setViewportView(atletasEnPruebaTextArea);

        labelPrueba2.setFont(new java.awt.Font("Manjari", 0, 18)); // NOI18N
        labelPrueba2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPrueba2.setText("Eliminar una prueba");
        labelPrueba2.setPreferredSize(new java.awt.Dimension(230, 23));

        listaPruebasEliminar.setMaximumSize(new java.awt.Dimension(180, 23));
        listaPruebasEliminar.setMinimumSize(new java.awt.Dimension(180, 23));
        listaPruebasEliminar.setPreferredSize(new java.awt.Dimension(180, 23));

        botonEliminarPrueba.setText("Eliminar");
        botonEliminarPrueba.setMaximumSize(new java.awt.Dimension(130, 23));
        botonEliminarPrueba.setMinimumSize(new java.awt.Dimension(130, 23));
        botonEliminarPrueba.setPreferredSize(new java.awt.Dimension(130, 23));
        botonEliminarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarPruebaActionPerformed(evt);
            }
        });

        labelAtletasEnPrueba.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAtletasEnPrueba.setText("Atletas en prueba");
        labelAtletasEnPrueba.setMaximumSize(new java.awt.Dimension(230, 30));
        labelAtletasEnPrueba.setMinimumSize(new java.awt.Dimension(230, 30));
        labelAtletasEnPrueba.setPreferredSize(new java.awt.Dimension(230, 30));

        actualizarAtletasEnPrueba.setText("Actualizar");
        actualizarAtletasEnPrueba.setMaximumSize(new java.awt.Dimension(100, 30));
        actualizarAtletasEnPrueba.setMinimumSize(new java.awt.Dimension(100, 30));
        actualizarAtletasEnPrueba.setPreferredSize(new java.awt.Dimension(100, 30));
        actualizarAtletasEnPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarAtletasEnPruebaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botonAgregarPrueba)
                    .addComponent(labelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrueba1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sedePrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instalacionPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelAtletasEnPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAgregarAtletaAPrueba)
                    .addComponent(actualizarAtletasEnPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonEliminarPrueba, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaPruebas, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrueba3, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaPruebasEliminar, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrueba2, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(220, 220, 220))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPrueba1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listaAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPrueba3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listaPruebas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonAgregarAtletaAPrueba))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(labelAtletasEnPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(actualizarAtletasEnPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrueba2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codigoPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaPruebasEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sedePrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instalacionPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregarPrueba)
                    .addComponent(botonEliminarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarPruebaActionPerformed
        
        // Toma los valores que ingresa el usuario
        int codigo;
        String titulo;
        ArrayList<Atleta> participa = new ArrayList<>();
        String sede;
        String instalacion;
        
        try {
            codigo = Integer.parseInt(this.codigoPrueba.getText());
            titulo = this.tituloPrueba.getText();
            sede = this.sedePrueba.getText();
            instalacion = this.instalacionPrueba.getText();
            
            // Crea y agrega la prueba a la colección de pruebas
            Atletas_GUI.listaPruebas.add(new Prueba(codigo, titulo, sede, instalacion, participa));
            JOptionPane.showMessageDialog(null, "Prueba guardada");
            
        }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los datos ingresados no son correctos");
        }
        
        // Actualiza lista de pruebas
        if(Atletas_GUI.listaPruebas.size() > 0){
            int item = (Atletas_GUI.listaPruebas.size()-1);
        
            listaPruebas.addItem(Atletas_GUI.listaPruebas.get(item).getTitulo());
            listaPruebasEliminar.addItem(Atletas_GUI.listaPruebas.get(item).getTitulo());
        }
        
        
        this.codigoPrueba.setText("Código");
        this.tituloPrueba.setText("Título");
        this.sedePrueba.setText("Sede");
        this.instalacionPrueba.setText("Instalación");
        
        
        // Guarda las modificaciones
        try {
            Atletas_GUI.guardaPrueba();
        } catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(null, "No se encontró el archivo");
            e.getMessage(); 
        } catch(IOException e){
            JOptionPane.showMessageDialog(null, "Ups! Hubo un error al guardar");
            e.getMessage(); 
        }

    }//GEN-LAST:event_botonAgregarPruebaActionPerformed

    private void botonTerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTerminarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonTerminarActionPerformed

    private void botonAgregarAtletaAPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarAtletaAPruebaActionPerformed
        
        // Toma los valores que ingresa el usuario
        String nombreAtleta = (String)Ingreso_A_Prueba.listaAtletas.getSelectedItem();
        String nombrePrueba = (String)Ingreso_A_Prueba.listaPruebas.getSelectedItem();
        int indiceAtleta = 0;
        int indicePrueba = 0;
        
        // Obtiene el índice de atleta de la coleccion
        for(int i=0; i<Atletas_GUI.equipo.getPertenece().size(); i++){  
            
            if (Atletas_GUI.equipo.getPertenece().get(i).getNombre().equals(nombreAtleta)){
               indiceAtleta = i;
            }
        }
        
        // Obtiene el índice de la prueba de la coleccion
        for(int i=0; i<Atletas_GUI.listaPruebas.size(); i++){  
            
            if (Atletas_GUI.listaPruebas.get(i).getTitulo().equals(nombrePrueba)){
               indicePrueba = i;
            }
        }
        
        // Agrega el atleta seleccionado a la prueba seleccionada
        Atletas_GUI.listaPruebas.get(indicePrueba).setParticipa(Atletas_GUI.equipo.getPertenece().get(indiceAtleta));
        
        // LLena el campo con los atletas de la prueba seleccionada
        String texto = "";
        for(int i=0; i<Atletas_GUI.listaPruebas.get(indicePrueba).getParticipa().size(); i++){
            texto = texto + Atletas_GUI.listaPruebas.get(indicePrueba).getParticipa().get(i).getNombre() + "\n";
        }

        this.atletasEnPruebaTextArea.setText(texto);
        
        // Guarda las modificaciones
        try {
            Atletas_GUI.guardaPrueba();
            JOptionPane.showMessageDialog(null, "Atleta asignado");
        } catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(null, "No se encontró el archivo");
            e.getMessage(); 
        } catch(IOException e){
            JOptionPane.showMessageDialog(null, "Ups! Hubo un error al guardar");
            e.getMessage(); 
        }
        
    }//GEN-LAST:event_botonAgregarAtletaAPruebaActionPerformed

    private void botonEliminarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarPruebaActionPerformed
        
        // Toma los valores que ingresa el usuario
        String nombrePruebaEliminar = (String)Ingreso_A_Prueba.listaPruebasEliminar.getSelectedItem();
        
        // Elimina la prueba de la colección
        for(int i=0; i<Atletas_GUI.listaPruebas.size(); i++){  
            
            if (Atletas_GUI.listaPruebas.get(i).getTitulo().equals(nombrePruebaEliminar)){
               Atletas_GUI.listaPruebas.remove(i);
               listaPruebas.removeItem(i);
               listaPruebasEliminar.removeItem(i);
               JOptionPane.showMessageDialog(null, "Prueba eliminada");
            }
        }
        
        listaPruebas.removeAllItems();
        listaPruebasEliminar.removeAllItems();
        
        // Actualiza lista de pruebas
        int item = (Atletas_GUI.listaPruebas.size()-1);
        
        if(Atletas_GUI.listaPruebas.size()>0){
            listaPruebas.addItem(Atletas_GUI.listaPruebas.get(item).getTitulo());
            listaPruebasEliminar.addItem(Atletas_GUI.listaPruebas.get(item).getTitulo());
        }
        
        // Guarda las modificaciones
        try {
            Atletas_GUI.guardaPrueba();
        } catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(null, "No se encontró el archivo");
            e.getMessage(); 
        } catch(IOException e){
            JOptionPane.showMessageDialog(null, "Ups! Hubo un error al guardar");
            e.getMessage(); 
        }
        
    }//GEN-LAST:event_botonEliminarPruebaActionPerformed

    private void actualizarAtletasEnPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarAtletasEnPruebaActionPerformed
        String nombrePrueba = (String)Ingreso_A_Prueba.listaPruebas.getSelectedItem();
        int indicePrueba = 0;
        
        // Obtiene el índice de la prueba de la coleccion
        for(int i=0; i<Atletas_GUI.listaPruebas.size(); i++){  
                if (Atletas_GUI.listaPruebas.get(i).getTitulo().equals(nombrePrueba)){
                indicePrueba = i;
                }
            }
        
        // LLena el campo con los atletas de la prueba seleccionada
        String texto = "";
        if(Atletas_GUI.listaPruebas.isEmpty()){
            texto = "";
        }else {
            for(int i=0; i<Atletas_GUI.listaPruebas.get(indicePrueba).getParticipa().size(); i++){
                texto = texto + Atletas_GUI.listaPruebas.get(indicePrueba).getParticipa().get(i).getNombre() + "\n";
            }
        }
        this.atletasEnPruebaTextArea.setText(texto);
    }//GEN-LAST:event_actualizarAtletasEnPruebaActionPerformed

    private void codigoPruebaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codigoPruebaFocusGained
        this.codigoPrueba.setText("");
    }//GEN-LAST:event_codigoPruebaFocusGained

    private void tituloPruebaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tituloPruebaFocusGained
        this.tituloPrueba.setText("");
    }//GEN-LAST:event_tituloPruebaFocusGained

    private void sedePruebaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sedePruebaFocusGained
        this.sedePrueba.setText("");
    }//GEN-LAST:event_sedePruebaFocusGained

    private void instalacionPruebaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_instalacionPruebaFocusGained
        this.instalacionPrueba.setText("");
    }//GEN-LAST:event_instalacionPruebaFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ingreso_A_Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ingreso_A_Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ingreso_A_Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ingreso_A_Prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ingreso_A_Prueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarAtletasEnPrueba;
    public javax.swing.JTextArea atletasEnPruebaTextArea;
    public javax.swing.JButton botonAgregarAtletaAPrueba;
    public javax.swing.JButton botonAgregarPrueba;
    private javax.swing.JButton botonEliminarPrueba;
    public javax.swing.JButton botonTerminar;
    public javax.swing.JTextField codigoPrueba;
    public javax.swing.JTextField instalacionPrueba;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAtletasEnPrueba;
    private javax.swing.JLabel labelPrueba;
    private javax.swing.JLabel labelPrueba1;
    private javax.swing.JLabel labelPrueba2;
    private javax.swing.JLabel labelPrueba3;
    public static javax.swing.JComboBox<String> listaAtletas;
    public static javax.swing.JComboBox<String> listaPruebas;
    public static javax.swing.JComboBox<String> listaPruebasEliminar;
    public javax.swing.JTextField sedePrueba;
    public javax.swing.JTextField tituloPrueba;
    // End of variables declaration//GEN-END:variables
}
