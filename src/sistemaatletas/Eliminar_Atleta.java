package sistemaatletas;

import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author nahuel
 */
public class Eliminar_Atleta extends javax.swing.JFrame {

    /**
     * Creates new form IMC_Atletas
     */
    public Eliminar_Atleta() {
        initComponents();
        
        // Si hay atletas los muestra
        if (Atletas_GUI.equipo.getPertenece().size() >= 1){
            String texto = "";
                for(Atleta atleta:Atletas_GUI.equipo.getPertenece()){  
                    texto = texto + "Nombre: " + atleta.getNombre() + "\n" 
                            + "DNI: " + atleta.getDni() + "\n"
                            + "Edad: " + atleta.getEdad() + "\n"
                            + "Altura: " + atleta.getAltura() + "\n"
                            + "Peso: " + atleta.getPeso() + "\n"
                            + "-------------" + "\n";  
                }
                this.listaAtletasEliminar.setText(texto);
        }else {
            this.listaAtletasEliminar.setText("No hay atletas registrados");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEliminarAtletas = new javax.swing.JLabel();
        dniAtletaEliminar = new javax.swing.JTextField();
        botonEliminar = new javax.swing.JButton();
        botonTerminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAtletasEliminar = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eliminar Atleta");
        setMaximumSize(new java.awt.Dimension(750, 500));
        setMinimumSize(new java.awt.Dimension(750, 500));

        labelEliminarAtletas.setFont(new java.awt.Font("Manjari", 0, 18)); // NOI18N
        labelEliminarAtletas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEliminarAtletas.setText("Ingrese DNI del atleta que desea eliminar");
        labelEliminarAtletas.setMaximumSize(new java.awt.Dimension(375, 25));
        labelEliminarAtletas.setMinimumSize(new java.awt.Dimension(375, 25));
        labelEliminarAtletas.setPreferredSize(new java.awt.Dimension(375, 25));

        dniAtletaEliminar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dniAtletaEliminar.setText("DNI atleta");
        dniAtletaEliminar.setMaximumSize(new java.awt.Dimension(180, 23));
        dniAtletaEliminar.setMinimumSize(new java.awt.Dimension(180, 23));
        dniAtletaEliminar.setPreferredSize(new java.awt.Dimension(180, 23));
        dniAtletaEliminar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dniAtletaEliminarFocusGained(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.setMaximumSize(new java.awt.Dimension(83, 30));
        botonEliminar.setMinimumSize(new java.awt.Dimension(83, 30));
        botonEliminar.setPreferredSize(new java.awt.Dimension(83, 30));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonTerminar.setText("Terminar");
        botonTerminar.setMaximumSize(new java.awt.Dimension(154, 30));
        botonTerminar.setMinimumSize(new java.awt.Dimension(154, 30));
        botonTerminar.setPreferredSize(new java.awt.Dimension(154, 30));
        botonTerminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTerminarActionPerformed(evt);
            }
        });

        listaAtletasEliminar.setEditable(false);
        listaAtletasEliminar.setColumns(20);
        listaAtletasEliminar.setRows(5);
        listaAtletasEliminar.setMaximumSize(new java.awt.Dimension(250, 90));
        listaAtletasEliminar.setMinimumSize(new java.awt.Dimension(250, 90));
        listaAtletasEliminar.setPreferredSize(new java.awt.Dimension(250, 90));
        jScrollPane1.setViewportView(listaAtletasEliminar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelEliminarAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(botonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(dniAtletaEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(labelEliminarAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(dniAtletaEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addComponent(botonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dniAtletaEliminarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dniAtletaEliminarFocusGained
        this.dniAtletaEliminar.setText("");
    }//GEN-LAST:event_dniAtletaEliminarFocusGained

    private void botonTerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTerminarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonTerminarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        
        // Toma los valores que ingresa el usuario
        int dniEliminar = Integer.parseInt(this.dniAtletaEliminar.getText());
        int atletaAEliminar;
        int opcion;
        
        // Elimina atleta seg√∫n DNI
        for(int i=0; i<Atletas_GUI.equipo.getPertenece().size(); i++){  
            
            if (Atletas_GUI.equipo.getPertenece().get(i).getDni() == dniEliminar){
                atletaAEliminar = i;
                opcion = JOptionPane.showConfirmDialog(null, "Seguro que desea eliminar al atleta " 
                        + Atletas_GUI.equipo.getPertenece().get(atletaAEliminar).getNombre() 
                        + " con DNI " + Atletas_GUI.equipo.getPertenece().get(atletaAEliminar).getDni());
        
                if(opcion == JOptionPane.YES_OPTION){
                    Atletas_GUI.equipo.getPertenece().remove(atletaAEliminar);
                    JOptionPane.showMessageDialog(null, "Atleta eliminado");
                }
            }else {
                JOptionPane.showMessageDialog(null, "No existe un atleta registrado con DNI: " 
                        + this.dniAtletaEliminar.getText());
            }
        }
        
        // Si hay atletas los muestra
        if (Atletas_GUI.equipo.getPertenece().size() >= 1){
            String texto = "";
                for(Atleta atleta:Atletas_GUI.equipo.getPertenece()){  
                    texto = texto + "Nombre: " + atleta.getNombre() + "\n" 
                            + "DNI: " + atleta.getDni() + "\n"
                            + "Edad: " + atleta.getEdad() + "\n"
                            + "Altura: " + atleta.getAltura() + "\n"
                            + "Peso: " + atleta.getPeso() + "\n"
                            + "-------------" + "\n";  
                }
                this.listaAtletasEliminar.setText(texto);
        }else {
            this.listaAtletasEliminar.setText("No hay atletas registrados");
        }
        
        // Guarda las modificaciones
        try { 
            Atletas_GUI.guardaEquipo();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ups! Algo sali√≥ mal");
            ex.getMessage();
        }
        
    }//GEN-LAST:event_botonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Eliminar_Atleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Eliminar_Atleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Eliminar_Atleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Eliminar_Atleta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eliminar_Atleta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonEliminar;
    public javax.swing.JButton botonTerminar;
    public javax.swing.JTextField dniAtletaEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelEliminarAtletas;
    public javax.swing.JTextArea listaAtletasEliminar;
    // End of variables declaration//GEN-END:variables
}
